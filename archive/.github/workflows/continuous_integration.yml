name: Continuous Integration

on:
  [ push,pull_request ]

jobs:
  build:
    name: Continuous Integration
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Check cmake version
        run: cmake --version

      - name: Creating build directory
        run: cmake -E make_directory ./build

      - name: Precompilation
        working-directory: ./build
        run: cmake .. -DCMAKE_BUILD_TYPE=Release

      - name: Compilation
        working-directory: ./build
        run: cmake --build . --config Release

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Data preprocessing
        working-directory: ./test_data
        run: bash preprocess.sh trec_05_efficiency_queries/trec_05_efficiency_queries.completions 300

      - name: Testing
        working-directory: ./build
        run: ctest

      - name: Build binary dictionary
        working-directory: build
        run: chmod +x build && ./build ef_type1 ../test_data/trec_05_efficiency_queries/trec_05_efficiency_queries.completions -o trec_05.ef_type1.bin

      - name: Building docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/autocomplete:latest .

      - name: Dockerhub Authentication
        run: docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Publishing image to Container Registry
        if: github.ref == 'refs/heads/master'
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/autocomplete:latest
